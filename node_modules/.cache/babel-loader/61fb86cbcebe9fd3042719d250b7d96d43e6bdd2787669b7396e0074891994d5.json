{"ast":null,"code":"var _jsxFileName = \"/Users/amelia/Desktop/React201-MovieApp/movie-app/src/components/ListView.js\",\n  _s = $RefreshSig$();\nimport Hero from './Hero';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListView = () => {\n  _s();\n  /* -- YOUR CODE/CRUD OPERATIONS HERE --*/\n  const MOCKAPI_URL = 'https://650b79e4dfd73d1fab0a02b6.mockapi.io/movieList';\n  const API_URL = `https://api.themoviedb.org/3/search/movie?api_key=267c28afad418890f877e7f790b0fda9&language=en-US&query=${searchText}&page=1&include_adult=false`;\n  const [movies, setMovies] = useState([]);\n  const [newMovieTitle, setNewMovieTitle] = useState('');\n  const [updatedMovieTitle, setUpdatedMovieTitle] = useState('');\n  useEffect(() => {\n    getMovies();\n  }, []);\n  function getMovies() {\n    fetch(MOCKAPI_URL).then(data => data.json()).then(data => {\n      setMovies(data);\n      console.log(data);\n    });\n  }\n  function deleteMovie(id) {\n    fetch(MOCKAPI_URL + `/${id}`, {\n      method: 'DELETE'\n    }).then(() => getMovies());\n  }\n  function postNewMovie(e) {\n    e.preventDefault();\n    fetch(MOCKAPI_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        movieTitle: newMovieTitle\n      })\n    }).then(() => getMovies());\n  }\n  function updateMovie(e, movieObject) {\n    e.preventDefault();\n    let updatedMovieObject = {\n      ...movieObject,\n      movieTitle: updatedMovieTitle\n    };\n    fetch(`${MOCKAPI_URL}/${movieObject.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedMovieObject)\n    }).then(() => getMovies());\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {\n      text: \"My Must Watch Movie List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-floating mt-5 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setNewMovieTitle(e.target.value),\n        type: \"text\",\n        className: \"form-control\",\n        id: \"floatingInput\",\n        placeholder: \"Movie Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"floatingInput\",\n        children: \"Add New Movie Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-dark text-center\",\n      onClick: e => postNewMovie(e),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-3 col-md-3 col-2 my-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"\",\n              className: \"card-img-top\",\n              alt: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Title: \", movie.movieTitle, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 54\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-outline-danger btn-sm\",\n                  onClick: () => deleteMovie(movie.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Update Title:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: e => setUpdatedMovieTitle(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-outline-secondary btn-sm\",\n                  onClick: e => updateMovie(e, movie),\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(ListView, \"uQdpNfCXRK4EHHE/qROAql8skis=\");\n_c = ListView;\nexport default ListView;\nvar _c;\n$RefreshReg$(_c, \"ListView\");","map":{"version":3,"names":["Hero","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ListView","_s","MOCKAPI_URL","API_URL","searchText","movies","setMovies","newMovieTitle","setNewMovieTitle","updatedMovieTitle","setUpdatedMovieTitle","getMovies","fetch","then","data","json","console","log","deleteMovie","id","method","postNewMovie","e","preventDefault","headers","body","JSON","stringify","movieTitle","updateMovie","movieObject","updatedMovieObject","children","text","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","target","value","type","placeholder","for","onClick","map","movie","index","src","alt","_c","$RefreshReg$"],"sources":["/Users/amelia/Desktop/React201-MovieApp/movie-app/src/components/ListView.js"],"sourcesContent":["import Hero from './Hero'\nimport {useEffect, useState} from 'react'\n\nconst ListView = () => {\n \n  /* -- YOUR CODE/CRUD OPERATIONS HERE --*/\n  const MOCKAPI_URL ='https://650b79e4dfd73d1fab0a02b6.mockapi.io/movieList'\n  const API_URL = (`https://api.themoviedb.org/3/search/movie?api_key=267c28afad418890f877e7f790b0fda9&language=en-US&query=${searchText}&page=1&include_adult=false`)\n  const [movies, setMovies] = useState([])\n  const [newMovieTitle, setNewMovieTitle] = useState('')\n  const [updatedMovieTitle, setUpdatedMovieTitle] = useState('')\n  \n\n  useEffect(() => {\n    getMovies()\n  }, [])\n\n  function getMovies() {\n    fetch(MOCKAPI_URL)\n      .then((data) => data.json())\n      .then((data) => {\n        setMovies(data)\n        console.log(data)\n      })\n  }\n\n  function deleteMovie(id) {\n    fetch(MOCKAPI_URL + `/${id}`, {\n      method: 'DELETE',\n    }).then(() => getMovies())\n  }\n\n  function postNewMovie(e) {\n    e.preventDefault()\n    fetch(MOCKAPI_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        movieTitle: newMovieTitle,\n      }),\n    }).then(() => getMovies())\n  }\n\n  function updateMovie(e, movieObject) {\n    e.preventDefault()\n  \n\n    let updatedMovieObject = {\n      ...movieObject,\n      movieTitle: updatedMovieTitle,\n    }\n\n    fetch(`${MOCKAPI_URL}/${movieObject.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updatedMovieObject),\n    }).then(() => getMovies())\n  }\n\n  return (\n    <>\n    <Hero text= \"My Must Watch Movie List\"/>  \n    <div className=\"form-floating mt-5 mb-3\">\n  <input onChange= {(e)=>setNewMovieTitle(e.target.value)} \n    type=\"text\" className=\"form-control\" \n    id=\"floatingInput\" placeholder=\"Movie Title\">\n  </input>\n  <label for=\"floatingInput\">Add New Movie Title</label>\n</div>\n\n  <button type=\"button\" className=\"btn btn-dark text-center\" \n    onClick={(e)=>postNewMovie(e)}>Submit</button>\n\n\n\n   \n\n    <div className=\"App\">\n      {movies.map((movie, index) => (\n        <div className=\"container\" key={index}>\n          <div className=\"col-lg-3 col-md-3 col-2 my-4\">\n                <div className=\"card\" >\n                  <img src=\"\" className=\"card-img-top\" alt=\"...\"></img>\n                  <div className=\"card-body\">\n                      <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n                      <div>Title: {movie.movieTitle} <br></br>\n                      <button className='btn btn-outline-danger btn-sm' onClick={() => deleteMovie(movie.id)}>Delete</button>\n                  </div>\n                    <form>\n                        <label>Update Title:</label>\n                        <input \n                          onChange={(e) => setUpdatedMovieTitle(e.target.value)}\n                        ></input>\n                        <br></br>\n                        <button className='btn btn-outline-secondary btn-sm' onClick={(e) => updateMovie(e, movie)}>Update</button>\n                    </form>\n                  </div>\n                </div>  \n              </div>\n            </div>  \n            ))}\n          </div>\n          </>\n        )\n      }\n\n\n  export default ListView"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}