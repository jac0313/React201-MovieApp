{"ast":null,"code":"var _jsxFileName = \"/Users/amelia/Desktop/React201-MovieApp/movie-app/src/ListView.js\",\n  _s = $RefreshSig$();\nimport Hero from './components/Hero';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListView = () => {\n  _s();\n  /* -- YOUR CODE/CRUD OPERATIONS HERE --*/\n  const API_URL = 'https://650b79e4dfd73d1fab0a02b6.mockapi.io/movieList';\n  const [movies, setMovies] = useState([]);\n  const [newMovieTitle, setNewMovieTitle] = useState('');\n  const [updatedMovieTitle, setUpdatedMovieTitle] = useState('');\n  useEffect(() => {\n    getMovies();\n  }, []);\n  function getMovies() {\n    fetch(API_URL).then(data => data.json()).then(data => {\n      setMovies(data);\n      console.log(data);\n    });\n  }\n  function deleteMovie(id) {\n    fetch(API_URL + `/${id}`, {\n      method: 'DELETE'\n    }).then(() => getMovies());\n  }\n  function postNewMovie(e) {\n    e.preventDefault();\n    fetch(API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: newMovieTitle\n      })\n    }).then(() => getMovies());\n  }\n  function updateMovie(e, movieObject) {\n    e.preventDefault();\n    let updatedMovieObject = {\n      ...movieObject,\n      name: updatedMovieTitle\n    };\n    fetch(`${API_URL}/${movieObject.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedMovieObject)\n    }).then(() => getMovies());\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {\n      text: \"My Must Watch Movie List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"\",\n        class: \"card-img-top\",\n        alt: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"card-text\",\n          children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add new movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setNewMovieTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 75\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => postNewMovie(e),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mapContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Title: \", movie.title, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteMovie(movie.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Update Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => setUpdatedMovieTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => updateMovie(e, movie),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(ListView, \"uQdpNfCXRK4EHHE/qROAql8skis=\");\n_c = ListView;\nexport default ListView;\nvar _c;\n$RefreshReg$(_c, \"ListView\");","map":{"version":3,"names":["Hero","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ListView","_s","API_URL","movies","setMovies","newMovieTitle","setNewMovieTitle","updatedMovieTitle","setUpdatedMovieTitle","getMovies","fetch","then","data","json","console","log","deleteMovie","id","method","postNewMovie","e","preventDefault","headers","body","JSON","stringify","name","updateMovie","movieObject","updatedMovieObject","children","text","fileName","_jsxFileName","lineNumber","columnNumber","class","src","alt","className","onChange","target","value","onClick","map","movie","index","title","_c","$RefreshReg$"],"sources":["/Users/amelia/Desktop/React201-MovieApp/movie-app/src/ListView.js"],"sourcesContent":["import Hero from './components/Hero'\nimport {useEffect, useState} from 'react'\n\nconst ListView = () => {\n \n  /* -- YOUR CODE/CRUD OPERATIONS HERE --*/\n  const API_URL ='https://650b79e4dfd73d1fab0a02b6.mockapi.io/movieList'\n  const [movies, setMovies] = useState([])\n  const [newMovieTitle, setNewMovieTitle] = useState('')\n  const [updatedMovieTitle, setUpdatedMovieTitle] = useState('')\n  \n\n  useEffect(() => {\n    getMovies()\n  }, [])\n\n  function getMovies() {\n    fetch(API_URL)\n      .then((data) => data.json())\n      .then((data) => {\n        setMovies(data)\n        console.log(data)\n      })\n  }\n\n  function deleteMovie(id) {\n    fetch(API_URL + `/${id}`, {\n      method: 'DELETE',\n    }).then(() => getMovies())\n  }\n\n  function postNewMovie(e) {\n    e.preventDefault()\n    fetch(API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name: newMovieTitle,\n      }),\n    }).then(() => getMovies())\n  }\n\n  function updateMovie(e, movieObject) {\n    e.preventDefault()\n  \n\n    let updatedMovieObject = {\n      ...movieObject,\n      name: updatedMovieTitle,\n    }\n\n    fetch(`${API_URL}/${movieObject.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updatedMovieObject),\n    }).then(() => getMovies())\n  }\n\n  return (\n    <>\n    <Hero text= \"My Must Watch Movie List\"/>  \n\n    <div class=\"card\" >\n  <img src=\"\" class=\"card-img-top\" alt=\"...\"></img>\n  <div class=\"card-body\">\n    <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n  </div>\n</div>\n\n    <div className=\"App\">\n      {/* CODE BELOW: PART: 5.3 Connecting our POST */}\n      <form>\n        <h3>Add new movie</h3>\n        <label>Title</label>\n        <input onChange={(e) => setNewMovieTitle(e.target.value)}></input><br></br>\n        <button onClick={(e) => postNewMovie(e)}>Submit</button>\n      </form>\n      <br></br>\n\n      {movies.map((movie, index) => (\n        <div className=\"mapContainer\" key={index}>\n          <div>\n            Title: {movie.title} <br></br>\n            <button onClick={() => deleteMovie(movie.id)}>Delete</button>\n          </div>\n          <form>\n            <label>Update Title</label>\n            <input\n              onChange={(e) => setUpdatedMovieTitle(e.target.value)}\n            ></input>\n            <br></br>\n            <button onClick={(e) => updateMovie(e, movie)}>Update</button>\n          </form>\n        </div>\n      ))}\n    </div>\n     </>\n  )\n}\n\n\n  export default ListView"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}