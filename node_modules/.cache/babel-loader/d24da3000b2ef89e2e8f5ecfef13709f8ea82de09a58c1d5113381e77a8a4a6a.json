{"ast":null,"code":"var _jsxFileName = \"/Users/amelia/Desktop/React201-MovieApp/movie-app/src/components/ListView.js\",\n  _s = $RefreshSig$();\nimport Hero from './Hero';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListView = () => {\n  _s();\n  /* -- YOUR CODE/CRUD OPERATIONS HERE --*/\n  const API_URL = 'https://650b79e4dfd73d1fab0a02b6.mockapi.io/movieList';\n  const [movies, setMovies] = useState([]);\n  const [newMovieTitle, setNewMovieTitle] = useState('');\n  const [updatedMovieTitle, setUpdatedMovieTitle] = useState('');\n  useEffect(() => {\n    getMovies();\n  }, []);\n  function getMovies() {\n    fetch(API_URL).then(data => data.json()).then(data => {\n      setMovies(data);\n      console.log(data);\n    });\n  }\n  function deleteMovie(id) {\n    fetch(API_URL + `/${id}`, {\n      method: 'DELETE'\n    }).then(() => getMovies());\n  }\n  function postNewMovie(e) {\n    e.preventDefault();\n    fetch(API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        movieTitle: newMovieTitle\n      })\n    }).then(() => getMovies());\n  }\n  function updateMovie(e, movieObject) {\n    e.preventDefault();\n    let updatedMovieObject = {\n      ...movieObject,\n      movieTitle: updatedMovieTitle\n    };\n    fetch(`${API_URL}/${movieObject.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedMovieObject)\n    }).then(() => getMovies());\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {\n      text: \"My Must Watch Movie List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-floating mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setNewMovieTitle(e.target.value),\n        type: \"text\",\n        className: \"form-control\",\n        id: \"floatingInput\",\n        placeholder: \"Movie Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"floatingInput\",\n        children: \"Add New Movie Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary text-center\",\n      onClick: e => postNewMovie(e),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mapContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"\",\n            className: \"card-img-top\",\n            alt: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Title: \", movie.title, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteMovie(movie.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Update Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => setUpdatedMovieTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => updateMovie(e, movie),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(ListView, \"uQdpNfCXRK4EHHE/qROAql8skis=\");\n_c = ListView;\nexport default ListView;\nvar _c;\n$RefreshReg$(_c, \"ListView\");","map":{"version":3,"names":["Hero","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ListView","_s","API_URL","movies","setMovies","newMovieTitle","setNewMovieTitle","updatedMovieTitle","setUpdatedMovieTitle","getMovies","fetch","then","data","json","console","log","deleteMovie","id","method","postNewMovie","e","preventDefault","headers","body","JSON","stringify","movieTitle","updateMovie","movieObject","updatedMovieObject","children","text","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","target","value","type","placeholder","for","onClick","map","movie","index","src","alt","title","_c","$RefreshReg$"],"sources":["/Users/amelia/Desktop/React201-MovieApp/movie-app/src/components/ListView.js"],"sourcesContent":["import Hero from './Hero'\nimport {useEffect, useState} from 'react'\n\nconst ListView = () => {\n \n  /* -- YOUR CODE/CRUD OPERATIONS HERE --*/\n  const API_URL ='https://650b79e4dfd73d1fab0a02b6.mockapi.io/movieList'\n  const [movies, setMovies] = useState([])\n  const [newMovieTitle, setNewMovieTitle] = useState('')\n  const [updatedMovieTitle, setUpdatedMovieTitle] = useState('')\n  \n\n  useEffect(() => {\n    getMovies()\n  }, [])\n\n  function getMovies() {\n    fetch(API_URL)\n      .then((data) => data.json())\n      .then((data) => {\n        setMovies(data)\n        console.log(data)\n      })\n  }\n\n  function deleteMovie(id) {\n    fetch(API_URL + `/${id}`, {\n      method: 'DELETE',\n    }).then(() => getMovies())\n  }\n\n  function postNewMovie(e) {\n    e.preventDefault()\n    fetch(API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        movieTitle: newMovieTitle,\n      }),\n    }).then(() => getMovies())\n  }\n\n  function updateMovie(e, movieObject) {\n    e.preventDefault()\n  \n\n    let updatedMovieObject = {\n      ...movieObject,\n      movieTitle: updatedMovieTitle,\n    }\n\n    fetch(`${API_URL}/${movieObject.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updatedMovieObject),\n    }).then(() => getMovies())\n  }\n\n  return (\n    <>\n    <Hero text= \"My Must Watch Movie List\"/>  \n    <div className=\"form-floating mb-3\">\n  <input onChange= {(e)=>setNewMovieTitle(e.target.value)} \n    type=\"text\" className=\"form-control\" \n    id=\"floatingInput\" placeholder=\"Movie Title\">\n  </input>\n  <label for=\"floatingInput\">Add New Movie Title</label>\n</div>\n\n  <button type=\"button\" className=\"btn btn-primary text-center\" \n    onClick={(e)=>postNewMovie(e)}>Submit</button>\n\n\n\n   \n\n    <div className=\"App\">\n      {movies.map((movie, index) => (\n        <div className=\"mapContainer\" key={index}>\n            <div className=\"card\" >\n              <img src=\"\" className=\"card-img-top\" alt=\"...\"></img>\n              <div className=\"card-body\">\n                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n                <div>Title: {movie.title} <br></br>\n                <button onClick={() => deleteMovie(movie.id)}>Delete</button>\n                </div>\n              </div>\n            </div>\n\n\n\n\n          \n          <form>\n            <label>Update Title</label>\n            <input\n              onChange={(e) => setUpdatedMovieTitle(e.target.value)}\n            ></input>\n            <br></br>\n            <button onClick={(e) => updateMovie(e, movie)}>Update</button>\n          </form>\n        </div>\n      ))}\n    </div>\n     </>\n  )\n}\n\n\n  export default ListView"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}